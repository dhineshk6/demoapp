import re
import os

def wrap_with_soap_envelope(xml_content):
    soap_template = f"""
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://example.com/webservices">
        <soapenv:Header/>
        <soapenv:Body>
            {xml_content}
        </soapenv:Body>
    </soapenv:Envelope>
    """
    return soap_template.strip()

def extract_and_process_log(log_file, output_file, output_dir):
    with open(log_file, 'r') as infile, open(output_file, 'w') as outfile:
        recording_incoming = False
        recording_input = False
        recording_abc_segment = False
        abc_segment = []
        segment_count = 0

        if not os.path.exists(output_dir):
            os.makedirs(output_dir)

        for line in infile:
            # Check for the "Incoming XML:" keyword to start recording
            if "Incoming XML:" in line:
                recording_incoming = True
                continue

            # Check for the "Input XML" keyword to start recording
            if "Input XML" in line:
                recording_input = True
                continue

            if recording_incoming:
                # Check if the line contains XML tags using regular expressions
                if re.search(r'<.*?>', line):
                    outfile.write(line.strip() + '\n')
                else:
                    # Stop recording if no XML tag is found in the line
                    recording_incoming = False

            if recording_input:
                # Check if the line contains XML tags and the keyword 'abc12345678'
                if re.search(r'<.*?>', line) and 'abc12345678' in line:
                    print(line.strip())
                else:
                    # Stop recording if no XML tag is found in the line
                    recording_input = False

            # Check for the start of an <ABC> segment
            if "<ABC>" in line:
                recording_abc_segment = True
                abc_segment = [line]  # Start a new segment
                continue

            if recording_abc_segment:
                abc_segment.append(line)
                if "</ABC>" in line:
                    recording_abc_segment = False
                    # Check if the segment contains 'abc12345678'
                    if any('abc12345678' in segment_line for segment_line in abc_segment):
                        print(f"Saving segment #{segment_count + 1}")
                        segment_count += 1
                        xml_content = ''.join(abc_segment).strip()
                        soap_message = wrap_with_soap_envelope(xml_content)
                        segment_filename = os.path.join(output_dir, f'segment_{segment_count}.xml')
                        with open(segment_filename, 'w') as segment_file:
                            segment_file.write(soap_message)
                    else:
                        print(f"Segment #{segment_count + 1} does not contain 'abc12345678'")

# Usage example with Windows file paths
log_file = r'C:\path\to\your\logfile.log'
output_file = r'C:\path\to\your\outputfile.xml'
output_dir = r'C:\path\to\output\directory'
extract_and_process_log(log_file, output_file, output_dir)
